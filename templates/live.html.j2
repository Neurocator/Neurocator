{% extends "base.html.j2" %}

{% block body %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lecture Tracker</title>
    <style>
        .bullet-point {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
        }
        .crossed-off {
            text-decoration: line-through;
        }
    </style>
</head>
<body>
    <h1>Lecture Tracker</h1>
    <div id="bulletPoints">
        <!-- Bullet points will be inserted here -->
    </div>
    <input type="text" id="userInput" placeholder="Enter a point and press Enter">
    <button id="startRecognition">Start Recognition</button>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const points = [];

            const addBulletPoint = (text) => {
                const pointIndex = points.length;
                points.push({ text, covered: false });
                const bulletPointDiv = document.createElement('div');
                bulletPointDiv.className = 'bullet-point';
                bulletPointDiv.id = `point${pointIndex}`;
                bulletPointDiv.innerText = text;
                document.getElementById('bulletPoints').appendChild(bulletPointDiv);
            };

            const inputField = document.getElementById('userInput');
            inputField.addEventListener('keypress', (event) => {
                if (event.key === 'Enter') {
                    const text = inputField.value.trim();
                    if (text) {
                        addBulletPoint(text);
                        inputField.value = '';
                    }
                }
            });

            if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
                const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
                recognition.lang = 'en-US';
                recognition.interimResults = false;
                recognition.maxAlternatives = 1;

                recognition.onresult = (event) => {
                    const transcript = event.results[0][0].transcript.toLowerCase();
                    console.log('Transcript:', transcript);
                    fetch('/transcribe', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ transcript, points })
                    })
                    .then(response => response.json())
                    .then(data => {
                        data.forEach((point, index) => {
                            if (point.covered) {
                                document.getElementById(`point${index}`).classList.add('crossed-off');
                            }
                        });
                    });
                };

                document.getElementById('startRecognition').addEventListener('click', () => {
                    recognition.start();
                });

                recognition.onend = () => {
                    recognition.start();
                };
            } else {
                alert('Speech recognition not supported in this browser.');
            }
        });
    </script>
</body>
{% endblock %}
</html>